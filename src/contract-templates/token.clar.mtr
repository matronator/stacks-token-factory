<# The template for generating the contract.
Uses MTRGen and Pars'Em under the hood #>

<# (impl-trait .ft-trait.sip-010-trait) #>
(impl-trait 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard.sip-010-trait)

(define-fungible-token <% name|kebabCase %><% if $tokenSupply > 0 %> u<% tokenSupply %><% endif %>)

(define-constant ERR_ADMIN_ONLY (err u401))
(define-constant ERR_EXCEEDS_MAX_AMOUNT (err u402))
(define-constant ERR_NOT_TOKEN_OWNER (err u403))

(define-constant CONTRACT_OWNER '<% userWallet %>)
<% if $mintable === true %>
<% if $mintAmount > 0 %>
(define-constant MAX_MINT_AMOUNT u<% mintAmount %>)
<% endif %>
<% endif %>

(define-data-var token-uri (string-utf8 256) u"<% tokenUri %>")

(define-read-only (get-balance (owner principal))
  (begin
    (ok (ft-get-balance <% name|kebabCase %> owner))))

(define-read-only (get-total-supply)
  (ok (ft-get-supply <% name|kebabCase %>)))

(define-read-only (get-name)
  (ok "<% name %>"))

(define-read-only (get-symbol)
  (ok "<% tokenSymbol %>"))

(define-read-only (get-decimals)
  (ok u<% tokenDecimals %>))

(define-public (transfer
  (amount uint)
  (sender principal)
  (recipient principal)
  (memo (optional (buff 34)))
)
  (begin
    (asserts! (is-eq tx-sender sender) ERR_NOT_TOKEN_OWNER)
    (try! (ft-transfer? token-name amount sender recipient))
    (match memo to-print (print to-print) 0x)
    (ok true)
  )
)

(define-read-only (get-token-uri)
  (ok (some (var-get token-uri))))

(define-public (set-token-uri (value (string-utf8 256)))
  (if (is-eq tx-sender CONTRACT_OWNER)
    (ok (var-set token-uri (some value)))
    (err ERR_ADMIN_ONLY)
  )
)

<% if $mintable === true %>
(define-public (mint <% if !$mintFixedAmount %>(amount uint) <% endif %>(recipient principal))
  (begin
<% if !$allowMintToAll %>
    (asserts! (is-eq tx-sender CONTRACT_OWNER) ERR_ADMIN_ONLY)
<% endif %>
<% if !$mintFixedAmount %>
<% if $mintAmount > 0 %>
    (asserts! (<= amount MAX_MINT_AMOUNT) (err ERR_EXCEEDS_MAX_AMOUNT))
<% endif %>
<% endif %>
    (ft-mint? <% name|kebabCase %> <% if !$mintFixedAmount %>amount<% else %>u<% mintAmount %><% endif %> recipient)
  )
)
<% endif %>

(define-private (send-stx (recipient principal) (amount uint))
  (begin
    (try! (stx-transfer? amount tx-sender recipient))
    (ok true)
  )
)

(begin
  (try! (send-stx 'SP39DTEJFPPWA3295HEE5NXYGMM7GJ8MA0TQX379 u<% deployCost * 1000000 %>))
<% if $initialAmount > 0 %>
  (try! (ft-mint? <% name|kebabCase %> u<% initialAmount %> CONTRACT_OWNER))
<% endif %>
<% if !$mintable %>
  (try! (ft-mint? <% name|kebabCase %> u<% tokenSupply %> CONTRACT_OWNER))
<% endif %>
)
